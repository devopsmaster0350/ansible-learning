---
- name: Installing Petclinic web application with MySQL DB server
  hosts: web_db_server
  become: yes
  tasks:
    - name: Installing Java 17 and Python MySQL dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - openjdk-17-jdk
        - python3-pymysql  # Ensures Ansible can interact with MySQL

    - name: Installing MySQL
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - mysql-client
    - name: start up the mysql service  
      shell: "service mysql start"      

    - name: Enabling the MySQL service
      ansible.builtin.service:
        name: mysql
        state: started
        enabled: true
    - name: Change MySQL root authentication to password
      shell: |
        mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root'; FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash
    
    - name: Update MySQL root password for all root accounts
      community.mysql.mysql_user:
        name: root
        password: root
        login_user: root
        login_password: root
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      loop:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost    
    - name: Create database user with name 'petclinic' and password 'petclinic' with all database privileges
      community.mysql.mysql_user:
        name: petclinic
        password: petclinic
        priv: '*.*:ALL'
        state: present
        login_user: root
        login_password: root 
    - name: Create a new database with name 'petclinic'
      community.mysql.mysql_db:
        name: petclinic
        login_user: root
        login_password: root
        state: present    
    - name: Copying the JAR file
      ansible.builtin.copy:
        src: /home/devopsmaster/petclinic-docker-compose/target/app.jar
        dest: /root/app.jar
        mode: '0755'

    - name: Running the application in background
      shell: |
        nohup java -jar /root/app.jar --server.port=8080 > /root/app.log 2>&1 &
      args:
        chdir: /root

